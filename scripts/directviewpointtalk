import sys
import urllib
import socket
import logging

from messenger import xulcontrolprotocol


class bob(object):
    
    def __init__(self):
        self.log = logging.getLogger()
        
    
    def write(self, data, port, host, RECV=2048):
        """Do a socket send and wait to receive directly to the xul browser.

        This side steps the broker if its not running already.
        
        """
        rc = ''
        import socket

        try:
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.connect((host, int(port)))
            s.send(data)
            rc = s.recv(RECV)
            s.close()
        except socket.error, e:
            print("write: socket send error - ")

        return rc

    
    def getBrowserUri(self, port, host='127.0.0.1'):
        """Called to recover where the browser is looking currently.
        """
        control_frame = {
            'command' : 'get_uri',
            'args' : {}
        }
        d = dict(replyto='no-one', data=control_frame)
        d = xulcontrolprotocol.dump(d)

        print("getBrowserUri: Sending command:\n%s\n\n" % str(d))
        rc = self.write(d, port, host)
        print("getBrowserUri:\nrc: %s\n\n" % str(rc))

    
    def setBrowserUri(self, args, port, host='127.0.0.1'):
        """Called to tell the XUL Browser where to point
        """
        # Go to yahoo:
        control_frame = {
            'command' : 'set_uri',
            'args' : {'uri':args}
        }
        d = dict(replyto='no-one', data=control_frame)
        d = xulcontrolprotocol.dump(d)

        print("setBrowserUri: Sending command:\n%s\n\n" % str(d))
        rc = self.write(d, port, host)
        print("setBrowserUri:\n%s\n\n" % str(rc))


    def callFunction(self, args, port, host='127.0.0.1'):
        """Call a javascript function in the browser.
        """        
        control_frame = {
            'command' : 'call',
            'args' : {'call':args}
        }
        d = dict(replyto='no-one', data=control_frame)
        d = xulcontrolprotocol.dump(d)

        print("callFunction: Sending command:\n%s\n\n" % str(d))
        rc = self.write(d, port, host)
        print("callFunction:\n%s\n\n" % str(rc))
        
        
if __name__ == "__main__":
    """
    """
    from optparse import OptionParser

    parser = OptionParser()

    parser.add_option(
        "-c","--command", action="store", dest="cmd",
        default='get_uri',
        help="Command to use. Default: get_uri"
    )
    parser.add_option(
        "-a","--args", action="store", dest="args",
        default='',
        help="The comm port the browser is using. Default: Nothing"
    )
    parser.add_option(
        "-p", "--port", action="store", dest="port",
        default=7055,
        help="The comm port the browser is using. Default: 7055"
    )
    
    (options, args) = parser.parse_args()

    b = bob()

    print("Running command '%s' with args '%s'." % (options.cmd, options.args))
    
    if options.cmd == 'get_uri':
        b.getBrowserUri(options.port)

    elif options.cmd == 'set_uri':
        b.setBrowserUri(options.args, options.port)

    elif options.cmd == 'call':
        b.callFunction(options.args, options.port)

    else:
        sys.stderr.write("Unknown command '%s'." % options.cmd)
        sys.exit(1)

    sys.exit(0)
        
    
